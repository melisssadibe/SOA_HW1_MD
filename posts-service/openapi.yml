openapi: 3.0.0
info:
  title: Social Network API
  description: REST API for user authentication and post management.
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: JWT token returned

  /profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile returned
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                birth_date:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Profile updated successfully

  /posts:
    post:
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                is_private:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Post created
    get:
      summary: List posts (paginated)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: page_size
          schema:
            type: integer
      responses:
        '200':
          description: Paginated list of posts

  /posts/{id}:
    get:
      summary: Get a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post data returned
    put:
      summary: Update a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                is_private:
                  type: boolean
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Post updated
    delete:
      summary: Delete a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT