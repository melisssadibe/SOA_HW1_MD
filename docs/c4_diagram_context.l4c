specification {
  element actor {
    style {
      shape person
      color secondary
    }
  }
  element system
  element container
  element containerDb
}

model {
  user = actor "User" {
    description "Создает посты, лайкает, комментирует"
  }

  api = container "API gateway" {
    description "Принимает запросы от пользователей и передает их в сервисы"
  }

  users = container "Users service" {
    description "Регистрация, авторизация и управление пользователями"
    technology "PostgreSQL"
  }

  posts = container "Posts service" {
    description "Создает, хранит посты и комментарии"
    technology "PostgreSQL"
  }

  stats = container "Stats service" {
    description "Считает лайки и просмотры"
    technology "ClickHouse"
  }

  db_users = containerDb "Users DB" {
    description "Хранит данные пользователей"
    technology "PostgreSQL"
  }

  db_posts = containerDb "Posts DB" {
    description "Хранит посты и комментарии"
    technology "PostgreSQL"
  }

  db_stats = containerDb "Stats DB" {
    description "Хранит просмотры и лайки"
    technology "ClickHouse"
  }

  user -> api "HTTP-запросы: регистрация, посты, лайки"

  api -> users "POST /register, POST /login"
  api -> posts "POST /create, GET /feed"
  api -> stats "POST /like, GET /stats"

  users -> db_users "Читает/записывает данные пользователей"
  posts -> db_posts "Читает/записывает посты и комментарии"
  stats -> db_stats "Записывает просмотры и лайки"

}

views {
  view index {
    title "Контейнерная диаграмма"
    include *
  }
}
